name: Build

on:
  push:
    branches:
      - main
    paths:
      - "Cargo.toml"
      - "src/**"
  pull_request_target:
    paths:
      - "Cargo.toml"
      - "src/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64
          - runner: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: swatinem/rust-cache@v2

      - name: Rustup add target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Build target
        run: cargo build --release --target ${{ matrix.platform.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-contrib-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/*.dll
            target/${{ matrix.platform.target }}/release/*.dylib

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            container: ghcr.io/memecrafters/meme-generator-build-container:latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64
          - runner: ubuntu-24.04-arm
            container: ghcr.io/memecrafters/meme-generator-build-container:arm64
            target: aarch64-unknown-linux-gnu
            label: linux-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: swatinem/rust-cache@v2

      - name: Rustup add target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Build target
        run: cargo build --release --target ${{ matrix.platform.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-contrib-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/*.so

  build_centos:
    runs-on: ubuntu-latest
    container: centos:8

    steps:
      - name: Replace CentOS YUM mirrors (Aliyun)
        run: |
          sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-*
          sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.aliyun.com|g' /etc/yum.repos.d/CentOS-*
          yum clean all
          yum makecache

      - name: Install system dependencies
        run: |
          yum install -y epel-release
          yum install -y \
            gcc gcc-c++ make git curl pkgconfig \
            openssl-devel fontconfig-devel freetype-devel \
            which

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "source $HOME/.cargo/env" >> ~/.bashrc
        shell: bash

      - name: Load Rust environment
        run: |
          source $HOME/.cargo/env
          rustup show
          rustup target add x86_64-unknown-linux-gnu
        shell: bash

      - name: Checkout project
        uses: actions/checkout@v4

      - name: Build project
        run: |
          source $HOME/.cargo/env
          cargo build --release --target x86_64-unknown-linux-gnu
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: meme-generator-contrib-linux-centos8
          path: target/x86_64-unknown-linux-gnu/release/*.so

  build_centos_static:
    runs-on: ubuntu-latest
    container: centos:8

    steps:
      - name: Replace CentOS YUM mirrors (Aliyun)
        run: |
          sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-*
          sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.aliyun.com|g' /etc/yum.repos.d/CentOS-*
          yum clean all
          yum makecache

      - name: Install dependencies (GCC 11 + libs)
        run: |
          yum install -y epel-release
          yum install -y centos-release-scl
          yum install -y gcc-toolset-11 gcc-toolset-11-gcc-c++ \
            make git curl pkgconfig \
            openssl-devel fontconfig-devel freetype-devel which

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "source $HOME/.cargo/env" >> ~/.bashrc
        shell: bash

      - name: Enable GCC 11
        run: |
          echo "source /opt/rh/gcc-toolset-11/enable" >> ~/.bashrc
          source /opt/rh/gcc-toolset-11/enable
          gcc --version
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Rust target
        run: |
          source /opt/rh/gcc-toolset-11/enable
          source $HOME/.cargo/env
          rustup target add x86_64-unknown-linux-gnu
        shell: bash

      - name: Build with static libstdc++
        run: |
          source /opt/rh/gcc-toolset-11/enable
          source $HOME/.cargo/env
          export RUSTFLAGS="-C link-arg=-static-libstdc++"
          cargo build --release --target x86_64-unknown-linux-gnu
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: meme-generator-contrib-centos8-static
          path: target/x86_64-unknown-linux-gnu/release/*.so



