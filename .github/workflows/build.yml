name: Build

on:
  push:
    branches:
      - main
    paths:
      - "Cargo.toml"
      - "src/**"
  pull_request_target:
    paths:
      - "Cargo.toml"
      - "src/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64
          - runner: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: swatinem/rust-cache@v2

      - name: Rustup add target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Build target
        run: cargo build --release --target ${{ matrix.platform.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-contrib-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/*.dll
            target/${{ matrix.platform.target }}/release/*.dylib

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            container: ghcr.io/memecrafters/meme-generator-build-container:latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64
          - runner: ubuntu-24.04-arm
            container: ghcr.io/memecrafters/meme-generator-build-container:arm64
            target: aarch64-unknown-linux-gnu
            label: linux-aarch64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: swatinem/rust-cache@v2

      - name: Rustup add target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Build target
        run: cargo build --release --target ${{ matrix.platform.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: "meme-generator-contrib-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/*.so

  build_centos:
    runs-on: ubuntu-latest
    container: centos:8
    steps:
      - name: Replace YUM mirrors
        run: |
          sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-*
          sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.aliyun.com|g' /etc/yum.repos.d/CentOS-*
          yum clean all
          yum makecache

      - name: Install dependencies
        run: |
          yum install -y epel-release
          yum install -y gcc gcc-c++ make git curl pkgconfig openssl-devel
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
          rustup target add x86_64-unknown-linux-gnu

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          source $HOME/.cargo/env
          cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v4
        with:
          name: meme-generator-contrib-linux-centos8
          path: target/x86_64-unknown-linux-gnu/release/*.so




